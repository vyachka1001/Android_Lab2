// Generated by view binder compiler. Do not edit!
package com.rpodmp.viarbitski.rpodmp2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.rpodmp.viarbitski.rpodmp2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TrackItemBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView trackArtist;

  @NonNull
  public final ImageView trackThumbnail;

  @NonNull
  public final TextView trackTitle;

  @NonNull
  public final RelativeLayout trackViewBackground;

  @NonNull
  public final RelativeLayout trackViewForeground;

  private TrackItemBinding(@NonNull FrameLayout rootView, @NonNull TextView trackArtist,
      @NonNull ImageView trackThumbnail, @NonNull TextView trackTitle,
      @NonNull RelativeLayout trackViewBackground, @NonNull RelativeLayout trackViewForeground) {
    this.rootView = rootView;
    this.trackArtist = trackArtist;
    this.trackThumbnail = trackThumbnail;
    this.trackTitle = trackTitle;
    this.trackViewBackground = trackViewBackground;
    this.trackViewForeground = trackViewForeground;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TrackItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TrackItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.track_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TrackItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.track_artist;
      TextView trackArtist = ViewBindings.findChildViewById(rootView, id);
      if (trackArtist == null) {
        break missingId;
      }

      id = R.id.track_thumbnail;
      ImageView trackThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (trackThumbnail == null) {
        break missingId;
      }

      id = R.id.track_title;
      TextView trackTitle = ViewBindings.findChildViewById(rootView, id);
      if (trackTitle == null) {
        break missingId;
      }

      id = R.id.track_view_background;
      RelativeLayout trackViewBackground = ViewBindings.findChildViewById(rootView, id);
      if (trackViewBackground == null) {
        break missingId;
      }

      id = R.id.track_view_foreground;
      RelativeLayout trackViewForeground = ViewBindings.findChildViewById(rootView, id);
      if (trackViewForeground == null) {
        break missingId;
      }

      return new TrackItemBinding((FrameLayout) rootView, trackArtist, trackThumbnail, trackTitle,
          trackViewBackground, trackViewForeground);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
